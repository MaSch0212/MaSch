<Project>
  
  <!-- Imports -->
  <Import Project="$(MSBuildThisFileDirectory)MaSch.Constants.props" Condition=" $(MaSchConstantsImported) != 'true' " />
  <Import Project="$(MSBuildThisFileDirectory)../src/Generators/MaSch.Generators.targets" Condition=" $(UseMaSchGenerators) == 'true' " />
  
  
  <!-- Common properties -->
  <PropertyGroup>
    <LangVersion>latest</LangVersion>
    <CodeAnalysisRuleSet>$(MSBuildThisFileDirectory)MaSch.ruleset</CodeAnalysisRuleSet>
    <AssemblyOriginatorKeyFile Condition=" $(SignAssembly) == 'true' ">$(MSBuildThisFileDirectory)MaSch.snk</AssemblyOriginatorKeyFile>
    <Nullable>enable</Nullable>
    <IncludePackageReferencesDuringMarkupCompilation>true</IncludePackageReferencesDuringMarkupCompilation>

    <OutputPath>$(MSBuildThisFileDirectory)..\bin\$(Configuration)\</OutputPath>
    <DocumentationFile Condition=" $(NoDocumentation) != 'true' ">$(OutputPath)$(TargetFramework)/$(AssemblyName).xml</DocumentationFile>
    <SupportedOSPlatform Condition=" $(UseWpf) == 'true' or $(UseWindowsForms) == 'true' ">windows</SupportedOSPlatform>
    <NoWarn Condition=" '$(TargetFramework)' == '$(TfmNetFramework)' or '$(TargetFramework)' == '$(TfmNetStandard)' ">$(NoWarn);8600;8601;8602;8603;8604;8777;8767</NoWarn>

    <Authors>Marc Schmidt</Authors>
    <Copyright>Copyright Â© Marc Schmidt 2021</Copyright>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/MaSch0212/MaSch</PackageProjectUrl>
  </PropertyGroup>

  
  <!-- Analyzers -->
  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="$(NetAnalyzersVersion)">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="StyleCop.Analyzers" Version="$(StyleCopVersion)">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="SonarAnalyzer.CSharp" Version="$(SonarAnalyzerVersion)" Condition="$(IsTestProject) != 'true'">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>
  <ItemGroup>
    <AdditionalFiles Include="$(MSBuildThisFileDirectory)stylecop.json" Link="stylecop.json" Visible="false" />
  </ItemGroup>

  
  <!-- Generators -->
  <ItemGroup>
    <ProjectReference Include="$(GitSourceDir)Generators/MaSch.Generators.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" Condition=" $(UseMaSchGenerators) == 'true' " />
  </ItemGroup>
  
  
  <!-- Wpf -->
  <ItemGroup Condition=" $(UseWpf) == 'true' and $(TargetFrameworkIdentifier) == '.NETFramework' ">
    <Reference Include="PresentationCore" />
    <Reference Include="PresentationFramework" />
    <Reference Include="System.Xaml" />
    <Reference Include="WindowsBase" />
  </ItemGroup>

  
  <!-- Windows Forms -->
  <ItemGroup Condition=" $(UseWindowsForms) == 'true' and $(TargetFrameworkIdentifier) == '.NETFramework' ">
    <Reference Include="System.Windows.Forms" />
  </ItemGroup>
  
  
  <!-- Source Link -->
  <PropertyGroup Condition=" $(ConfigureSourceLink) == 'true' ">
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>
  
  <ItemGroup Condition=" $(ConfigureSourceLink) == 'true' ">
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="$(SourceLinkGitHubVersion)" PrivateAssets="All"/>
  </ItemGroup>
  
  
  <!-- Release notes -->
  <PropertyGroup Condition=" $(AddReleaseNotes) == 'true' ">
    <ReleaseNotesFile>Properties/release-notes/v$(Version).txt</ReleaseNotesFile>
  </PropertyGroup>
  
  <Target Name="WarnAboutMissingReleaseNotesFile" BeforeTargets="DispatchToInnerBuilds" Condition=" $(AddReleaseNotes) == 'true' ">
    <Warning Text="No release notes found for version $(Version). The file is expected at the path &quot;$(ReleaseNotesFile)&quot;" Condition="!Exists('$(ReleaseNotesFile)')" />
  </Target>
  
  <Target Name="PreparePackageReleaseNotesFromFile" BeforeTargets="GenerateNuspec" Condition=" $(AddReleaseNotes) == 'true' ">
    <ReadLinesFromFile File="$(ReleaseNotesFile)" >
      <Output TaskParameter="Lines" ItemName="ReleaseNoteLines"/>
    </ReadLinesFromFile>
    <PropertyGroup>
      <PackageReleaseNotes>@(ReleaseNoteLines, '%0a')</PackageReleaseNotes>
    </PropertyGroup>
  </Target>
  

  <!-- Test Projects -->
  <PropertyGroup Condition=" $(IsTestProject) == 'true' ">
    <IsPackable>false</IsPackable>
    <CodeAnalysisRuleSet>$(MSBuildThisFileDirectory)MaSch.Tests.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  
  <ItemGroup Condition=" $(IsTestProject) == 'true' ">
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="$(MsTestSdkVersion)" />
    <PackageReference Include="MSTest.TestAdapter" Version="$(MsTestVersion)" />
    <PackageReference Include="MSTest.TestFramework" Version="$(MsTestVersion)" />
    <PackageReference Include="Moq" Version="$(MoqVersion)" />
    <ProjectReference Include="$(GitSourceDir)Test.Components/MaSch.Test.Components.csproj" />
  </ItemGroup>
  
</Project>