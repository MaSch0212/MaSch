<Project>
  <Import Project="$(MSBuildThisFileDirectory)../src/Generators/MaSch.Generators.targets" />

  <PropertyGroup>
    <!-- Test related packages -->
    <MsTestVersion>2.2.3</MsTestVersion>
    <MsTestSdkVersion>16.9.4</MsTestSdkVersion>
    <MoqVersion>4.16.1</MoqVersion>
    
    <!-- Build related packages -->
    <SourceLinkGitHubVersion>1.0.0</SourceLinkGitHubVersion>
    <NetAnalyzersVersion>5.0.3</NetAnalyzersVersion>
    <StyleCopVersion>1.2.0-beta.333</StyleCopVersion>
    
    <!-- Functionality related packages -->
    <NewtonsoftJsonVersion>12.0.3</NewtonsoftJsonVersion>
    <SystemDiagnosticsEventLogVersion>5.0.0</SystemDiagnosticsEventLogVersion>
    <SystemComponentModelAnnotationsVersion>5.0.0</SystemComponentModelAnnotationsVersion>
    <PrismWpf>[7.2.0.1367,8.0.0)</PrismWpf>
  </PropertyGroup>
  
  <PropertyGroup>
    <LangVersion>latest</LangVersion>
    <CodeAnalysisRuleSet>$(MSBuildThisFileDirectory)MaSch.ruleset</CodeAnalysisRuleSet>
    <AssemblyOriginatorKeyFile Condition=" $(SignAssembly) == 'true' ">$(MSBuildThisFileDirectory)MaSch.snk</AssemblyOriginatorKeyFile>
    <Nullable>enable</Nullable>
    <IncludePackageReferencesDuringMarkupCompilation>true</IncludePackageReferencesDuringMarkupCompilation>

    <OutputPath>$(MSBuildThisFileDirectory)..\bin\$(Configuration)\</OutputPath>
    <DocumentationFile Condition=" $(NoDocumentation) != 'true' ">$(OutputPath)$(AssemblyName).xml</DocumentationFile>
    <SupportedOSPlatform Condition=" $(UseWpf) == 'true' or $(UseWindowsForms) == 'true' ">windows</SupportedOSPlatform>

    <Authors>Marc Schmidt</Authors>
    <Copyright>Copyright Â© Marc Schmidt 2021</Copyright>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/MaSch0212/MaSch</PackageProjectUrl>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'net48' or '$(TargetFramework)' == 'netstandard2.0' ">
    <NoWarn>$(NoWarn);8600;8601;8602;8603;8604;8777;8767</NoWarn>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="$(NetAnalyzersVersion)">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="StyleCop.Analyzers" Version="$(StyleCopVersion)">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup Condition=" $(UseWpf) == 'true' and $(TargetFrameworkIdentifier) == '.NETFramework' ">
    <Reference Include="PresentationCore" />
    <Reference Include="PresentationFramework" />
    <Reference Include="System.Xaml" />
    <Reference Include="WindowsBase" />
  </ItemGroup>

  <ItemGroup Condition=" $(UseWindowsForms) == 'true' and $(TargetFrameworkIdentifier) == '.NETFramework' ">
    <Reference Include="System.Windows.Forms" />
  </ItemGroup>
  
  <!-- Source Link -->
  <PropertyGroup Condition=" $(ConfigureSourceLink) == 'true' ">
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>

  <ItemGroup Condition=" $(ConfigureSourceLink) == 'true' ">
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="$(SourceLinkGitHubVersion)" PrivateAssets="All"/>
  </ItemGroup>
  
  <!-- Release notes -->
  <PropertyGroup Condition=" $(AddReleaseNotes) == 'true' ">
    <ReleaseNotesFile>Properties/release-notes/v$(Version).txt</ReleaseNotesFile>
  </PropertyGroup>
    
  <Target Name="WarnAboutMissingReleaseNotesFile" BeforeTargets="DispatchToInnerBuilds" Condition=" $(AddReleaseNotes) == 'true' ">
    <Warning Text="No release notes found for version $(Version). The file is expected at the path &quot;$(ReleaseNotesFile)&quot;" Condition="!Exists('$(ReleaseNotesFile)')" />
  </Target>
    
  <Target Name="PreparePackageReleaseNotesFromFile" BeforeTargets="GenerateNuspec" Condition=" $(AddReleaseNotes) == 'true' ">
    <ReadLinesFromFile File="$(ReleaseNotesFile)" >
      <Output TaskParameter="Lines" ItemName="ReleaseNoteLines"/>
    </ReadLinesFromFile>
    <PropertyGroup>
      <PackageReleaseNotes>@(ReleaseNoteLines, '%0a')</PackageReleaseNotes>
    </PropertyGroup>
  </Target>

  <!-- Test Projects -->
  <PropertyGroup Condition=" $(IsTestProject) == 'true' ">
    <IsPackable>false</IsPackable>
    <CodeAnalysisRuleSet>$(MSBuildThisFileDirectory)MaSch.Tests.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  
  <ItemGroup Condition=" $(IsTestProject) == 'true' ">
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="$(MsTestSdkVersion)" />
    <PackageReference Include="MSTest.TestAdapter" Version="$(MsTestVersion)" />
    <PackageReference Include="MSTest.TestFramework" Version="$(MsTestVersion)" />
  </ItemGroup>
</Project>