//namespace MaSch.Generators.UnitTests;

//[TestClass]
//public class StaticFilesGeneratorTests : TestClassBase
//{
//    private static readonly Assembly[] _assemblyReferences = new[]
//    {
//#if NETFRAMEWORK
//        Assembly.Load("mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"),
//#elif NET
//        Assembly.Load("System.Private.CoreLib"),
//#endif
//    };

//    [TestMethod]
//    public void AllFilesGenerated()
//    {
//        var result = CompilationBuilder.Create()
//            .WithGenerator(new StaticFilesGenerator())
//            .WithReferences(_assemblyReferences)
//            .Build();

//        result.TraceDiagnostics();
//        result.ValidateDiagnostics().HasNoErrors();

//        var generatedSources = result.GeneratedSourceResults.Select(x => (x.HintName, SourceText: x.SourceText.ToString()));
//        var expectedSources = from file in Directory.EnumerateFiles("TestFiles/Generators/StaticFiles", "*", SearchOption.AllDirectories)
//                              let expectedHintName = $"{Path.GetFileNameWithoutExtension(file)}.g.cs"
//                              let expectedSourceText = SourceBuilder.AutoGeneratedFileHeader + File.ReadAllText(file)
//                              select (HintName: expectedHintName, SourceText: expectedSourceText);
//        Assert.AreCollectionsEquivalent(expectedSources, generatedSources);
//    }
//}