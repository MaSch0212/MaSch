//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Test
{
    partial class MyClass : global::System.ComponentModel.INotifyPropertyChanged
    {
        /// <inheritdoc/>
        public event global::System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        /// <summary>Sets the specified property and notifies subscribers about the change.</summary>
        /// <typeparam name="T">The type of the property to set.</typeparam>
        /// <param name="property">The property backing field.</param>
        /// <param name="value">The value to set.</param>
        /// <param name="propertyName">Name of the property.</param>
        public virtual void SetProperty<T>(ref T property, T value, [global::System.Runtime.CompilerServices.CallerMemberNameAttribute] string propertyName = null)
        {
            property = value;
            OnPropertyChanged(propertyName);
        }

        protected virtual void OnPropertyChanged([global::System.Runtime.CompilerServices.CallerMemberNameAttribute] string propertyName = "")
        {
            PropertyChanged?.Invoke(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }
}
