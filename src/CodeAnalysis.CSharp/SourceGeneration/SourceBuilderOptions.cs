namespace MaSch.CodeAnalysis.CSharp.SourceGeneration;

/// <summary>
/// Represents options for the <see cref="SourceBuilder"/> class.
/// </summary>
public sealed class SourceBuilderOptions
{
    /// <summary>
    /// Gets the default options.
    /// </summary>
    public static SourceBuilderOptions Default { get; } = new();

    /// <summary>
    /// Gets the number of whitespace characters to use when indenting.
    /// </summary>
    public int IndentSize { get; init; } = 4;

    /// <summary>
    /// Gets the suggested starting size of the <see cref="SourceBuilder"/>.
    /// </summary>
    public int Capacity { get; init; } = 16 * 1024; // 16KB

    /// <summary>
    /// Gets a value indicating whether a file header should be automatically added that informs users and IDEs, that the source is auto-generated (see <see cref="SourceBuilder.AutoGeneratedFileHeader"/>).
    /// </summary>
    public bool IncludeFileHeader { get; init; } = true;

    /// <summary>
    /// Gets a value indicating whether it should be ensured that the line above a generated type or delegate is empty.
    /// </summary>
    public bool EnsureEmptyLineBeforeTypes { get; init; } = true;

    /// <summary>
    /// Gets a value indicating whether it should be ensured that the line above a generated namespace is empty.
    /// </summary>
    public bool EnsureEmptyLineBeforeNamespaces { get; init; } = true;

    /// <summary>
    /// Gets a value indicating whether it should be ensured that the line above a generated constructor, static constructor or finalizer is empty.
    /// </summary>
    public bool EnsureEmptyLineBeforeConstructors { get; init; } = true;

    /// <summary>
    /// Gets a value indicating whether it should be ensured that the line above a generated method is empty.
    /// </summary>
    public bool EnsureEmptyLineBeforeMethods { get; init; } = true;

    /// <summary>
    /// Gets a value indicating whether it should be ensured that the line above a generated field is empty.
    /// </summary>
    public bool EnsureEmptyLineBeforeFields { get; init; } = false;

    /// <summary>
    /// Gets a value indicating whether it should be ensured that the line above a generated property, event or indexer is empty.
    /// </summary>
    public bool EnsureEmptyLineBeforeProperties { get; init; } = true;

    /// <summary>
    /// Gets a value indicating whether it should be ensured that the line above a generated enum value is empty.
    /// </summary>
    public bool EnsureEmptyLineBeforeEnumValues { get; init; } = false;

    /// <summary>
    /// Gets a value indicating whether it should be ensured that the line above a member that has comments defined is empty.
    /// </summary>
    public bool EnsureEmptyLineBeforeMembersWithComments { get; init; } = true;

    /// <summary>
    /// Gets a value indicating whether it should be ensured that the line above a member that has code attributes defined is empty.
    /// </summary>
    public bool EnsureEmptyLineBeforeMembersWithAttributes { get; init; } = true;
}
