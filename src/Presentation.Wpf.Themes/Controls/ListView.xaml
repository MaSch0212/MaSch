<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converter="http://schemas.masch212.de/MaSch/Wpf/Converter"
                    xmlns:m="http://schemas.masch212.de/MaSch/Wpf"
                    xmlns:tm="clr-namespace:MaSch.Presentation.Wpf.Markup">

    <converter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />

    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="ScrollViewer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid Margin="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0"
                                Grid.Column="0"
                                Grid.ColumnSpan="2"
                                BorderBrush="{tm:ThemeValue Key=NormalBorderBrush}"
                                DockPanel.Dock="Top">
                            <ScrollViewer Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden">
                                <!--  ReSharper disable Xaml.BindingWithContextNotResolved  -->
                                <GridViewHeaderRowPresenter AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                                            Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <!--  ReSharper restore Xaml.BindingWithContextNotResolved  -->
                            </ScrollViewer>
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderThickness" Value="0,0,0,1" />
                                    <Style.Triggers>
                                        <!--  ReSharper disable once Xaml.BindingWithContextNotResolved  -->
                                        <DataTrigger Binding="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}" Value="0">
                                            <Setter Property="BorderThickness" Value="0" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                        </Border>

                        <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                                Grid.Row="1"
                                                Grid.Column="0"
                                                Grid.ColumnSpan="2" />

                        <ScrollBar Name="PART_VerticalScrollBar"
                                   Grid.Row="1"
                                   Grid.Column="1"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Value="{TemplateBinding VerticalOffset}" />

                        <ScrollBar Name="PART_HorizontalScrollBar"
                                   Grid.Row="2"
                                   Grid.Column="0"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Orientation="Horizontal"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{TemplateBinding HorizontalOffset}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard Name="ScrollBarsFadeIn" HandoffBehavior="Compose">
                                    <Storyboard Duration="0:0:0.2">
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <EventTrigger.Actions>
                                <BeginStoryboard Name="ScrollBarsFadeOut" HandoffBehavior="Compose">
                                    <Storyboard BeginTime="0:0:3.5" Duration="0:0:0.2">
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.2" />
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
        <Setter Property="Width" Value="4" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <LinearGradientBrush.GradientStops>
                        <GradientStopCollection>
                            <GradientStop Offset="0.0" Color="{DynamicResource BorderLightColor}" />
                            <GradientStop Offset="1.0" Color="{DynamicResource BorderDarkColor}" />
                        </GradientStopCollection>
                    </LinearGradientBrush.GradientStops>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                        <Rectangle Width="1"
                                   HorizontalAlignment="Center"
                                   Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Offset="0" Color="Black" />
                    <GradientStop Offset="1" Color="White" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type GridViewColumnHeader}}" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{tm:ThemeValue Key=ListBoxItemNormalBackgroundBrush}" />
        <Setter Property="Foreground" Value="{tm:ThemeValue Key=ListBoxItemNormalForegroundBrush}" />
        <Setter Property="BorderThickness" Value="{tm:ThemeValue Key=ListBoxItemNormalBorderThickness}" />
        <Setter Property="BorderBrush" Value="{tm:ThemeValue Key=ListBoxItemNormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid>
                        <Border x:Name="HeaderBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="HeaderContent"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <Thumb x:Name="PART_HeaderGripper"
                               Margin="0,0,-2,0"
                               HorizontalAlignment="Right"
                               Style="{StaticResource GridViewColumnHeaderGripper}"
                               Visibility="{Binding RelativeSource={RelativeSource AncestorType=ListView}, Path=View.(m:ListView.AllowResizing), Converter={StaticResource BoolToVisibilityConverter}}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="Floating">
                <Setter Property="Opacity" Value="0.7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Canvas Name="PART_FloatingHeaderCanvas">
                                <Rectangle Width="{TemplateBinding ActualWidth}"
                                           Height="{TemplateBinding ActualHeight}"
                                           Fill="#60000000" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ListView}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="{tm:ThemeValue Key=ListBoxBorderThickness}" />
        <Setter Property="BorderBrush" Value="{tm:ThemeValue Key=ListBoxBorderBrush}" />
        <Setter Property="Background" Value="{tm:ThemeValue Key=ListBoxBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="{tm:ThemeValue Key=ListBoxItemNormalBackgroundBrush}" />
        <Setter Property="Foreground" Value="{tm:ThemeValue Key=ListBoxItemNormalForegroundBrush}" />
        <Setter Property="BorderThickness" Value="{tm:ThemeValue Key=ListBoxItemNormalBorderThickness}" />
        <Setter Property="BorderBrush" Value="{tm:ThemeValue Key=ListBoxItemNormalBorderBrush}" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{tm:ThemeValue Key=ListBoxItemHoverBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{tm:ThemeValue Key=ListBoxItemHoverForegroundBrush}" />
                            <Setter Property="BorderBrush" Value="{tm:ThemeValue Key=ListBoxItemHoverBorderBrush}" />
                            <Setter Property="BorderThickness" Value="{tm:ThemeValue Key=ListBoxItemHoverBorderThickness}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{tm:ThemeValue Key=ListBoxItemCheckedBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{tm:ThemeValue Key=ListBoxItemCheckedForegroundBrush}" />
                            <Setter Property="BorderBrush" Value="{tm:ThemeValue Key=ListBoxItemCheckedBorderBrush}" />
                            <Setter Property="BorderThickness" Value="{tm:ThemeValue Key=ListBoxItemCheckedBorderThickness}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{tm:ThemeValue Key=ListBoxItemHoverCheckedBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{tm:ThemeValue Key=ListBoxItemHoverCheckedForegroundBrush}" />
                            <Setter Property="BorderBrush" Value="{tm:ThemeValue Key=ListBoxItemHoverCheckedBorderBrush}" />
                            <Setter Property="BorderThickness" Value="{tm:ThemeValue Key=ListBoxItemHoverCheckedBorderThickness}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{tm:ThemeValue Key=ListBoxItemDisabledBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{tm:ThemeValue Key=ListBoxItemDisabledForegroundBrush}" />
                            <Setter Property="BorderBrush" Value="{tm:ThemeValue Key=ListBoxItemDisabledBorderBrush}" />
                            <Setter Property="BorderThickness" Value="{tm:ThemeValue Key=ListBoxItemDisabledBorderThickness}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>