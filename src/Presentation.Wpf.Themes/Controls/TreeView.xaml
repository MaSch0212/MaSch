<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:MaSch.Presentation.Wpf.Controls"
                    xmlns:tm="clr-namespace:MaSch.Presentation.Wpf.Markup">

    <Style BasedOn="{StaticResource {x:Type TreeView}}" TargetType="{x:Type TreeView}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="BorderThickness" Value="{tm:ThemeValue Key=ListBoxBorderThickness}" />
        <Setter Property="BorderBrush" Value="{tm:ThemeValue Key=ListBoxBorderBrush}" />
        <Setter Property="Background" Value="{tm:ThemeValue Key=ListBoxBackgroundBrush}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeView">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="ScrollViewer"
                                      Background="Transparent"
                                      BorderBrush="Transparent"
                                      BorderThickness="0"
                                      CanContentScroll="False"
                                      Focusable="False">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <controls:IconPresenter x:Name="PART_Icon"
                                            Width="15"
                                            Height="15"
                                            Padding="1"
                                            Background="Transparent"
                                            Icon="{tm:ThemeValue Key=TreeViewItemCollapsedIcon}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PART_Icon" Property="Icon" Value="{tm:ThemeValue Key=TreeViewItemExpandedIcon}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="0,0,0,0"
                                   Opacity="0"
                                   Stroke="Black"
                                   StrokeDashArray="1 2"
                                   StrokeThickness="5" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type TreeViewItem}}" TargetType="{x:Type TreeViewItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{tm:ThemeValue Key=ListBoxItemNormalBackgroundBrush}" />
        <Setter Property="Foreground" Value="{tm:ThemeValue Key=ListBoxItemNormalForegroundBrush}" />
        <Setter Property="BorderThickness" Value="{tm:ThemeValue Key=ListBoxItemNormalBorderThickness}" />
        <Setter Property="BorderBrush" Value="{tm:ThemeValue Key=ListBoxItemNormalBorderBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="4,3,3,3" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" MinWidth="19" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander"
                                      ClickMode="Press"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource ExpandCollapseToggleStyle}" />
                        <Border x:Name="Bd"
                                Grid.Row="0"
                                Grid.Column="1"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter x:Name="PART_Header"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              ContentSource="Header" />
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Margin="-8,0,0,0"
                                        Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{tm:ThemeValue Key=ListBoxItemHoverBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{tm:ThemeValue Key=ListBoxItemHoverForegroundBrush}" />
                            <Setter Property="BorderBrush" Value="{tm:ThemeValue Key=ListBoxItemHoverBorderBrush}" />
                            <Setter Property="BorderThickness" Value="{tm:ThemeValue Key=ListBoxItemHoverBorderThickness}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{tm:ThemeValue Key=ListBoxItemCheckedBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{tm:ThemeValue Key=ListBoxItemCheckedForegroundBrush}" />
                            <Setter Property="BorderBrush" Value="{tm:ThemeValue Key=ListBoxItemCheckedBorderBrush}" />
                            <Setter Property="BorderThickness" Value="{tm:ThemeValue Key=ListBoxItemCheckedBorderThickness}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{tm:ThemeValue Key=ListBoxItemHoverCheckedBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{tm:ThemeValue Key=ListBoxItemHoverCheckedForegroundBrush}" />
                            <Setter Property="BorderBrush" Value="{tm:ThemeValue Key=ListBoxItemHoverCheckedBorderBrush}" />
                            <Setter Property="BorderThickness" Value="{tm:ThemeValue Key=ListBoxItemHoverCheckedBorderThickness}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{tm:ThemeValue Key=ListBoxItemDisabledBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{tm:ThemeValue Key=ListBoxItemDisabledForegroundBrush}" />
                            <Setter Property="BorderBrush" Value="{tm:ThemeValue Key=ListBoxItemDisabledBorderBrush}" />
                            <Setter Property="BorderThickness" Value="{tm:ThemeValue Key=ListBoxItemDisabledBorderThickness}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>