<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:MaSch.Presentation.Wpf.Controls"
                    xmlns:converter="http://schemas.masch212.de/MaSch/Wpf/Converter"
                    xmlns:tm="clr-namespace:MaSch.Presentation.Wpf.Markup">

    <Style x:Key="MaSchComboBox_ToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{tm:ThemeValue Key=ComboBoxNormalBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{tm:ThemeValue Key=ComboBoxNormalBorderBrush}" />
        <Setter Property="BorderThickness" Value="{tm:ThemeValue Key=ComboBoxNormalBorderThickness}" />
        <Setter Property="Foreground" Value="{tm:ThemeValue Key=ComboBoxNormalForegroundBrush}" />
        <Setter Property="Padding" Value="16,8" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="PART_Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{tm:ThemeValue Key=ComboBoxCornerRadius}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Border" Property="Background" Value="{tm:ThemeValue Key=ComboBoxHoverBackgroundBrush}" />
                            <Setter Property="BorderBrush" Value="{tm:ThemeValue Key=ComboBoxHoverBorderBrush}" />
                            <Setter Property="Foreground" Value="{tm:ThemeValue Key=ComboBoxHoverForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PART_Border" Property="Background" Value="{tm:ThemeValue Key=ComboBoxOpenBackgroundBrush}" />
                            <Setter Property="BorderBrush" Value="{tm:ThemeValue Key=ComboBoxOpenBorderBrush}" />
                            <Setter Property="Foreground" Value="{tm:ThemeValue Key=ComboBoxOpenForegroundBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Border" Property="Background" Value="{tm:ThemeValue Key=ComboBoxHoverOpenBackgroundBrush}" />
                            <Setter Property="BorderBrush" Value="{tm:ThemeValue Key=ComboBoxHoverOpenBorderBrush}" />
                            <Setter Property="Foreground" Value="{tm:ThemeValue Key=ComboBoxHoverOpenForegroundBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Border" Property="Background" Value="{tm:ThemeValue Key=ComboBoxPressBackgroundBrush}" />
                            <Setter Property="BorderBrush" Value="{tm:ThemeValue Key=ComboBoxPressBorderBrush}" />
                            <Setter Property="Foreground" Value="{tm:ThemeValue Key=ComboBoxPressForegroundBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsPressed" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Border" Property="Background" Value="{tm:ThemeValue Key=ComboBoxPressOpenBackgroundBrush}" />
                            <Setter Property="BorderBrush" Value="{tm:ThemeValue Key=ComboBoxPressOpenBorderBrush}" />
                            <Setter Property="Foreground" Value="{tm:ThemeValue Key=ComboBoxPressOpenForegroundBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{tm:ThemeValue Key=ComboBoxDisabledBackgroundBrush}" />
                            <Setter Property="BorderBrush" Value="{tm:ThemeValue Key=ComboBoxDisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{tm:ThemeValue Key=ComboBoxDisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type ComboBoxItem}}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{tm:ThemeValue Key=ComboBoxItemNormalBackgroundBrush}" />
        <Setter Property="Foreground" Value="{tm:ThemeValue Key=ComboBoxItemNormalForegroundBrush}" />
        <Setter Property="Padding" Value="{tm:ThemeValue Key=ComboBoxItemPadding}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid x:Name="Border" SnapsToDevicePixels="True">
                        <Border Background="{TemplateBinding Background}" />
                        <ContentPresenter Margin="{TemplateBinding Padding}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{tm:ThemeValue Key=ComboBoxItemHoverBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{tm:ThemeValue Key=ComboBoxItemHoverForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{tm:ThemeValue Key=ComboBoxItemSelectedBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{tm:ThemeValue Key=ComboBoxItemSelectedForegroundBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{tm:ThemeValue Key=ComboBoxItemSelectedHoverBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{tm:ThemeValue Key=ComboBoxItemSelectedHoverForegroundBrush}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{tm:ThemeValue Key=ComboBoxNormalBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{tm:ThemeValue Key=ComboBoxNormalBorderBrush}" />
        <Setter Property="BorderThickness" Value="{tm:ThemeValue Key=ComboBoxNormalBorderThickness}" />
        <Setter Property="Padding" Value="10,8,8,8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <ControlTemplate.Resources>
                        <converter:ThicknessConverter x:Key="LeftEqualsRightThicknessConverter" LeftFormula="R" />
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.Resources>
                            <converter:MathConverter x:Key="MathConverter" />
                        </Grid.Resources>
                        <ToggleButton x:Name="ToggleButton"
                                      Padding="{TemplateBinding Padding}"
                                      HorizontalContentAlignment="Stretch"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Focusable="False"
                                      IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}"
                                      Style="{DynamicResource MaSchComboBox_ToggleButton}">
                            <Grid x:Name="ButtonContent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="ContentSite"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Center"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentStringFormat="{TemplateBinding ItemStringFormat}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
                                <controls:IconPresenter Grid.Column="1"
                                                        Height="{Binding ActualHeight, ElementName=ContentSite}"
                                                        MaxWidth="18"
                                                        Padding="4"
                                                        Icon="{tm:ThemeValue Key=ComboBoxArrowIcon}" />
                            </Grid>
                        </ToggleButton>

                        <Grid x:Name="PART_EditableStuff" Visibility="Hidden">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="PART_EditableTextBox"
                                     Grid.Column="0"
                                     Padding="{TemplateBinding Padding}"
                                     Focusable="True"
                                     IsReadOnly="{TemplateBinding IsReadOnly}" />

                            <ToggleButton x:Name="PART_EditableToggleButton"
                                          Grid.Column="1"
                                          Padding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Padding, Converter={StaticResource LeftEqualsRightThicknessConverter}}"
                                          HorizontalAlignment="Right"
                                          Background="{Binding ElementName=PART_EditableTextBox, Path=Background}"
                                          Focusable="False"
                                          IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen, Mode=TwoWay}"
                                          Style="{DynamicResource MaSchComboBox_ToggleButton}">
                                <controls:IconPresenter Grid.Column="1"
                                                        Height="{Binding ActualHeight, ElementName=ContentSite}"
                                                        MaxWidth="18"
                                                        Padding="4"
                                                        Icon="{tm:ThemeValue Key=ComboBoxArrowIcon}" />
                            </ToggleButton>

                            <Rectangle x:Name="PART_BackRect"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="2"
                                       Fill="{Binding ElementName=PART_EditableTextBox, Path=Background}"
                                       IsHitTestVisible="False">
                                <Rectangle.OpacityMask>
                                    <VisualBrush AlignmentX="Left"
                                                 AlignmentY="Top"
                                                 Stretch="None"
                                                 TileMode="None">
                                        <VisualBrush.Visual>
                                            <Grid Width="{Binding ElementName=PART_BackRect, Path=ActualWidth}"
                                                  Height="{Binding ElementName=PART_BackRect, Path=ActualHeight}"
                                                  Background="Transparent">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="{Binding ElementName=PART_EditableToggleButton, Path=ActualWidth}" />
                                                </Grid.ColumnDefinitions>
                                                <Path Grid.Column="0"
                                                      Width="{Binding TopRight}"
                                                      Height="{Binding TopRight}"
                                                      HorizontalAlignment="Right"
                                                      VerticalAlignment="Top"
                                                      Data="M 1,0 0,0 A 1,1 90 0 1 1,1 Z"
                                                      DataContext="{tm:ThemeValue Key=TextBoxCornerRadius}"
                                                      Fill="Black"
                                                      Stretch="Fill" />
                                                <Path Grid.Column="0"
                                                      Width="{Binding BottomRight}"
                                                      Height="{Binding BottomRight}"
                                                      HorizontalAlignment="Right"
                                                      VerticalAlignment="Bottom"
                                                      Data="M 1,1 1,0 A 1,1 90 0 1 0,1 Z"
                                                      DataContext="{tm:ThemeValue Key=TextBoxCornerRadius}"
                                                      Fill="Black"
                                                      Stretch="Fill" />
                                                <Path Grid.Column="1"
                                                      Width="{Binding TopLeft}"
                                                      Height="{Binding TopLeft}"
                                                      HorizontalAlignment="Left"
                                                      VerticalAlignment="Top"
                                                      Data="M 0,0 0,1 A 1,1 90 0 1 1,0 Z"
                                                      DataContext="{tm:ThemeValue Key=ButtonCornerRadius}"
                                                      Fill="Black"
                                                      Stretch="Fill" />
                                                <Path Grid.Column="1"
                                                      Width="{Binding BottomLeft}"
                                                      Height="{Binding BottomLeft}"
                                                      HorizontalAlignment="Left"
                                                      VerticalAlignment="Bottom"
                                                      Data="M 0,1 1,1 A 1,1 90 0 1 0,0 Z"
                                                      DataContext="{tm:ThemeValue Key=ButtonCornerRadius}"
                                                      Fill="Black"
                                                      Stretch="Fill" />
                                            </Grid>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Rectangle.OpacityMask>
                            </Rectangle>
                        </Grid>

                        <Popup x:Name="Popup"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               Placement="Bottom"
                               PopupAnimation="Slide"
                               VerticalOffset="{Binding ElementName=DropDownBorder, Path=BorderThickness.Top, Converter={StaticResource MathConverter}, ConverterParameter=-x}">
                            <Grid x:Name="DropDown"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                  SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder"
                                        Background="{tm:ThemeValue Key=ComboBoxPopupBackgroundBrush}"
                                        BorderBrush="{tm:ThemeValue Key=ComboBoxPopupBorderBrush}"
                                        BorderThickness="{tm:ThemeValue Key=ComboBoxPopupBorderThickness}"
                                        CornerRadius="{tm:ThemeValue Key=ComboBoxPopupCornerRadius}">
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="ToggleButton" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="PART_EditableStuff" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>